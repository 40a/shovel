#! /usr/bin/env python

import argparse

# First off, read the arguments
parser = argparse.ArgumentParser(description='Perform various administrative tasks.')

parser.add_argument('method', help='The task to run')
parser.add_argument('--verbose', dest='verbose', action='store_true',
    help='Be extra talkative')
parser.add_argument('--dry-run', dest='dryRun', action='store_true',
    help='Don\'t actually run the command, but show the args that would be used')

# Parse our arguments
clargs, remaining = parser.parse_known_args()

import shovel
import logging
if clargs.verbose:
    shovel.logger.setLevel(logging.DEBUG)

def parse(remaining):
    # Now build up our arguments to the function
    args   = []
    kwargs = {}
    kw     = None
    for item in remaining:
        # If it's been given an argument name, save it and wait for the
        # next argument to be parsed
        if item.startswith('--'):
            kw = item.strip('-')
        elif kw != None:
            kwargs[kw] = item
            kw = None
        else:
            args.append(item)
    return args, kwargs

args, kwargs = parse(remaining)
shovel.load()
if clargs.method == 'help':
    shovel.help(*args, **kwargs)
elif clargs.method:
    # Try to get the first command provided
    t = shovel.Task.find(clargs.method)
    if not t:
        print 'Could not find task "%s"' % clargs.method
        exit(1)
    
    if clargs.dryRun:
        t.dry(*args, **kwargs)
    else:
        t(*args, **kwargs)
else:
    print 'Help'
